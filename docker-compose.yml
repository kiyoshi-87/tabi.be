services:
  postgres:
    image: postgres:16
    container_name: keycloak-db
    restart: always
    environment:
      POSTGRES_DB: keycloak  # Replace with secrets
      POSTGRES_USER: keycloak # Replace with secrets
      POSTGRES_PASSWORD: secret # Replace with secrets
    volumes:
      - keycloak-db-data:/var/lib/postgresql/data
    networks:
      - tabi-net

  keycloak:
    image: quay.io/keycloak/keycloak:26.2.0
    container_name: keycloak-tabi
    restart: always
    environment:
      - KEYCLOAK_ADMIN=admin # Replace with secrets
      - KEYCLOAK_ADMIN_PASSWORD=admin # Replace with secrets
      - KC_DB=postgres
      - KC_DB_URL=jdbc:postgresql://keycloak-db:5432/keycloak
      - KC_DB_USERNAME=keycloak
      - KC_DB_PASSWORD=secret
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    networks:
      - tabi-net
    volumes:
      - ./keycloak/my-realm:/opt/keycloak/data/import
    command:
      - "start-dev"

  tabi-be:
    image: kiyoshi087/tabi-be:1.2.0
    container_name: tabi-be
    restart: always
    environment:
      - OLLAMA_BASE_URL=http://localhost:11434
    depends_on:
      - keycloak
    ports:
      - "8085:8085"
    networks:
      - tabi-net

  tabi-fe:
    image: kiyoshi087/tabi-fe:1.0.0
    container_name: tabi-frontend
    restart: always
    ports:
      - "3000:3000"
    networks:
      - tabi-net

  ollama:
    image: ollama/ollama
    container_name: ollama
    ports:
      - "11435:11434"
    volumes:
      - ollama-models:/root/.ollama
      - ./Ollama:/root/Ollama
    devices:
      - /dev/kvm
    restart: unless-stopped
    working_dir: /root/Ollama
    entrypoint: [ "/bin/sh", "-c", "ollama serve & sleep 10 && ollama create my-gemma -f Modelfile && ollama run my-gemma" ]

networks:
  tabi-net:
    driver: bridge

volumes:
  keycloak-db-data:
  ollama-models: