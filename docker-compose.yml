services:
  postgres:
    image: postgres:16
    container_name: keycloak-db
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - keycloak-db-data:/var/lib/postgresql/data
    networks:
      - tabi-net

  keycloak:
    image: quay.io/keycloak/keycloak:26.2.0
    container_name: keycloak-tabi
    restart: always
    environment:
      - KEYCLOAK_ADMIN=${KEYCLOAK_ADMIN}
      - KEYCLOAK_ADMIN_PASSWORD=${KEYCLOAK_ADMIN_PASSWORD}
      - KC_DB=postgres
      - KC_DB_URL=jdbc:postgresql://keycloak-db:5432/keycloak
      - KC_DB_USERNAME=keycloak
      - KC_DB_PASSWORD=${KC_DB_PASSWORD}
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    networks:
      - tabi-net
    volumes:
      - ./keycloak/my-realm:/opt/keycloak/data/import
    command:
      - "start-dev"

  tabi-be:
    image: kiyoshi087/tabi-be:latest
    container_name: tabi-be
    restart: always
    environment:
      - OPEN_ROUTER_API_KEY=${OPEN_ROUTER_API_KEY}
      - OPEN_ROUTER_LLM_MODEL=${OPEN_ROUTER_LLM_MODEL}
    depends_on:
      - keycloak
    ports:
      - "8085:8085"
    networks:
      - tabi-net

  tabi-fe:
    image: kiyoshi087/tabi-fe:1.0.0
    container_name: tabi-frontend
    restart: always
    ports:
      - "3000:3000"
    environment:
      - VITE_BACK_END_URL=${VITE_BACK_END_URL}
      - VITE_KEYCLOAK_URL=${VITE_KEYCLOAK_URL}
      - VITE_KEYCLOAK_REALM=tabi
      - VITE_KEYCLOAK_CLIENT_ID=${VITE_KEYCLOAK_CLIENT_ID}
    networks:
      - tabi-net

networks:
  tabi-net:
    driver: bridge

volumes:
  keycloak-db-data:
  ollama-models: